//- Produce an error label (styled text) for a form input field
//-
//- This is used to produce a matching error near the appropriate input field
//- when the server-side validation fails, as opposed to simply dumping all the
//- errors in a single spot (i.e.: top of form) and potentially forcing the
//- end-user to scroll up and down to fix each error.
//-
//- param input_field The err string object used to compare equality against
//-                   the errors object.
mixin check_err( input_field )
  if locals.form_helpers.has_err( notifications, input_field )
    div(class='err padding-top-offset10')
      img(width='16', height='16', style='padding-right: 8px;', src='/images/error_16.png', alt='Error Icon')
      = input_field

//- Do not use client-side form field validation unless in production
//- environment
- var extra_attrs = null;
- if( settings.env != 'production' || settings.env != 'testing' ) extra_attrs = 'novalidate';

if locals.form_helpers.has_errs( notifications )
  //- Acts as both a reference link anchor -- for jumping to form errors upon
  //- submission -- and as a container (necessary for proper text wrapping).
  #errs
    .float-left
      img(width='32', height='32', src='/images/alert_32.png', alt='Alert Icon')
    p(class='sans')= 'Sorry, ' + locals.form_helpers.count_errs( notifications ) + ' submission errors have been found.'

form(class='contact_form', action=locals.loc.pathname + '#errs', method='POST', novalidate= extra_attrs )
  .input_container
    //- div(style='padding-right:20px; background-color:#FFEBDC;')
    div(class='label')
      +check_err( locals.input_errs['contact'].name )
      label(for='contact_name') Your Name
      span(class='req') Required
    input(id='contact_name', class= locals.form_helpers.class_selector( notifications, locals.input_errs['contact'].name ), type='text', name='contact[name]', spellcheck='false', required data-required-msg= locals.input_errs['contact'].name, placeholder='First, Last Name', value= contact['name'], maxlength=255 )

    div(class='label')
      +check_err( locals.input_errs['contact'].email )
      label(for='contact_email') Your Email Address
      span(class='req') Required
    input(id='contact_email', class= locals.form_helpers.class_selector( notifications, locals.input_errs['contact'].email ), type='email', name='contact[email]', required data-required-msg= locals.input_errs['contact'].email, placeholder='example@domain.com', value= contact['email'], maxlength=255 )

    div(class='label')
      +check_err( locals.input_errs['contact'].phone_area )
      +check_err( locals.input_errs['contact'].phone_prefix )
      +check_err( locals.input_errs['contact'].phone_suffix )
      label(for='phone_area') Your Phone Number
      // Cheat w3c validation ... shame on me! ;x
      label(for='phone_prefix', hidden=true)
      label(for='phone_suffix', hidden=true)
      //- label(for='phone_ext', hidden=true)
      span(class='req') Required

    |  (
    input(id='phone_area', class= locals.form_helpers.class_selector( notifications, locals.input_errs['contact'].phone_area ), type='tel', name='contact[phone_area]', maxlength=3, required data-required-msg= locals.input_errs['contact'].phone_area, placeholder='479', value= contact['phone_area'] )
    |  )
    input(id='phone_prefix', class= locals.form_helpers.class_selector( notifications, locals.input_errs['contact'].phone_prefix ), type='tel', name='contact[phone_prefix]', maxlength=3, required data-required-msg= locals.input_errs['contact'].phone_prefix, placeholder='555', value= contact['phone_prefix'] )
    |  -
    input(id='phone_suffix', class= locals.form_helpers.class_selector( notifications, locals.input_errs['contact'].phone_suffix ), type='tel', name='contact[phone_suffix]', maxlength=4, required data-required-msg= locals.input_errs['contact'].phone_suffix, placeholder='1244', value= contact['phone_suffix'] )

    div(class='label')
      +check_err( locals.input_errs['contact'].message )
      label(for='contact_message') Your Message
      span(class='req') Required
    textarea(id='contact_message', class= locals.form_helpers.class_selector( notifications, locals.input_errs['contact'].message ), name='contact[message]', spellcheck='true', required data-required-msg= locals.input_errs['contact'].message, maxlength=4096)= contact['message']

    div(class='label')
      +check_err( locals.input_errs['contact'].tos )
      input(id='tos', class= locals.form_helpers.class_selector( notifications, locals.input_errs['contact'].tos ), type='checkbox', name='contact[tos]', value='agree', required data-required-msg= locals.input_errs['contact'].tos, checked= contact['tos'])

      label(for='tos', class='tos') I have read and understand the &#32;
        a(id='disclaimer-popup', href='/disclaimer', target='_blank') disclaimer.
      span(class='req') Required

    button(class='orange-button border-rounded margin-top-offset25 margin-bottom-offset25', type='submit', name='action', value='send_msg') Send Message

#modal-content
  #modal-data
    h1 Email Disclaimer
    include email_disclaimer
    .align-text-center
      button(class='orange-button border-rounded simplemodal-close') OKAY
